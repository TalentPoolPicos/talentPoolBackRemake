services:
  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - front.dev.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio:
    image: bitnami/minio:latest
    restart: always
    env_file:
      - front.dev.env
    volumes:
      - minio-data:/bitnami/minio/data
    healthcheck:
      test: ["CMD-SHELL", "mc alias set local http://localhost:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} >/dev/null 2>&1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  es:
    image: bitnami/elasticsearch:latest
    restart: always
    env_file:
      - front.dev.env
    depends_on:
      - postgres
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - front.dev.env
    ports:
      - "${PORT}:${PORT}"
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:${PORT}/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      es:
        condition: service_healthy

volumes:
  postgres-data:
    driver: local
  minio-data:
    driver: local
  es-data:
    driver: local
